–°—É–ø–µ—Ä! üéâ –†–∞–¥—ñ—é, —â–æ –ø—Ä–∞—Ü—é—î! –¢–µ–ø–µ—Ä –ø–µ—Ä–µ–π–¥–µ–º–æ –¥–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–æ–≤—ñ–¥–Ω–∏–∫—ñ–≤.

üìã –©–æ —Ç—Ä–µ–±–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–æ–≤—ñ–¥–Ω–∏–∫—ñ–≤
–ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–æ–≤—ñ–¥–Ω–∏–∫ d_status:

sql
–ö–æ–ø—ñ—é–≤–∞—Ç–∏
–†–µ–¥–∞–≥—É–≤–∞—Ç–∏
CREATE TABLE D_STATUS (
    STATUS_ID INTEGER PRIMARY KEY,
    STATUS_NAME VARCHAR(100) NOT NULL
);
üîÅ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏ –¥–ª—è –¥–æ–≤—ñ–¥–Ω–∏–∫–∞:
/dict/status ‚Äì —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö —Å—Ç–∞—Ç—É—Å—ñ–≤

/dict/status/add ‚Äì –¥–æ–¥–∞–≤–∞–Ω–Ω—è

/dict/status/edit/<id> ‚Äì —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è

/dict/status/delete/<id> ‚Äì –≤–∏–¥–∞–ª–µ–Ω–Ω—è

‚úÖ Flask: –ø—Ä–∏–∫–ª–∞–¥ –º–∞—Ä—à—Ä—É—Ç—É
python
–ö–æ–ø—ñ—é–≤–∞—Ç–∏
–†–µ–¥–∞–≥—É–≤–∞—Ç–∏
@app.route('/dict/status')
def list_statuses():
    con = get_db_connection()
    cur = con.cursor()
    cur.execute("SELECT STATUS_ID, STATUS_NAME FROM D_STATUS ORDER BY STATUS_NAME")
    statuses = cur.fetchall()
    con.close()
    return render_template('dict_status.html', statuses=statuses)

@app.route('/dict/status/add', methods=['GET', 'POST'])
def add_status():
    if request.method == 'POST':
        name = request.form['name']
        con = get_db_connection()
        cur = con.cursor()
        cur.execute("INSERT INTO D_STATUS (STATUS_ID, STATUS_NAME) VALUES (NEXT VALUE FOR GEN_STATUS_ID, ?)", (name,))
        con.commit()
        con.close()
        return redirect(url_for('list_statuses'))
    return render_template('dict_edit.html', item=None, title='–î–æ–¥–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å')

@app.route('/dict/status/edit/<int:id>', methods=['GET', 'POST'])
def edit_status(id):
    con = get_db_connection()
    cur = con.cursor()
    if request.method == 'POST':
        name = request.form['name']
        cur.execute("UPDATE D_STATUS SET STATUS_NAME = ? WHERE STATUS_ID = ?", (name, id))
        con.commit()
        con.close()
        return redirect(url_for('list_statuses'))
    cur.execute("SELECT STATUS_NAME FROM D_STATUS WHERE STATUS_ID = ?", (id,))
    item = cur.fetchone()
    con.close()
    return render_template('dict_edit.html', item=item, title='–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å')

@app.route('/dict/status/delete/<int:id>')
def delete_status(id):
    con = get_db_connection()
    cur = con.cursor()
    cur.execute("DELETE FROM D_STATUS WHERE STATUS_ID = ?", (id,))
    con.commit()
    con.close()
    return redirect(url_for('list_statuses'))
üß© dict_status.html
html
–ö–æ–ø—ñ—é–≤–∞—Ç–∏
–†–µ–¥–∞–≥—É–≤–∞—Ç–∏
{% extends 'base.html' %}
{% block content %}
<h2>–°—Ç–∞—Ç—É—Å–∏</h2>
<a href="{{ url_for('add_status') }}" class="btn btn-success mb-2">‚ûï –î–æ–¥–∞—Ç–∏</a>
<table class="table table-bordered table-striped">
  <thead><tr><th>ID</th><th>–ù–∞–∑–≤–∞</th><th>–î—ñ—ó</th></tr></thead>
  <tbody>
    {% for id, name in statuses %}
    <tr>
      <td>{{ id }}</td>
      <td>{{ name }}</td>
      <td>
        <a href="{{ url_for('edit_status', id=id) }}" class="btn btn-sm btn-warning">‚úèÔ∏è</a>
        <a href="{{ url_for('delete_status', id=id) }}" class="btn btn-sm btn-danger" onclick="return confirm('–í–∏–¥–∞–ª–∏—Ç–∏?')">üóë</a>
      </td>
    </tr>
    {% endfor %}
  </tbody>
</table>
{% endblock %}
üß© dict_edit.html
html
–ö–æ–ø—ñ—é–≤–∞—Ç–∏
–†–µ–¥–∞–≥—É–≤–∞—Ç–∏
{% extends 'base.html' %}
{% block content %}
<h2>{{ title }}</h2>
<form method="post">
  <div class="mb-3">
    <label class="form-label">–ù–∞–∑–≤–∞</label>
    <input name="name" class="form-control" required value="{{ item[0] if item else '' }}">
  </div>
  <button type="submit" class="btn btn-primary">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏</button>
  <a href="{{ url_for('list_statuses') }}" class="btn btn-secondary">‚¨Ö –ù–∞–∑–∞–¥</a>
</form>
{% endblock %}
üîÑ –ü–æ–≤—Ç–æ—Ä–∏ –¥–ª—è —ñ–Ω—à–∏—Ö –¥–æ–≤—ñ–¥–Ω–∏–∫—ñ–≤
–ú–æ–∂–µ—à —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ü—ñ –º–∞—Ä—à—Ä—É—Ç–∏ –¥–ª—è:

/dict/type ‚Üí D_CAR_TYPE

/dict/state ‚Üí D_STATE

/dict/division ‚Üí D_DIVISION